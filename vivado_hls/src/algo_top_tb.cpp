#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>

#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>

#include <argp.h>

#include "algo_top_parameters.h"
#include "algo_top.h"

#include "../../../common/APxLinkData.hh"

using namespace std;


int main() {

	ap_uint<384> test_in[N_INPUT_LINKS];
	ap_uint<384> test_out[N_OUTPUT_LINKS];

	test_in[0] = "0x00000000000000000000000000000000900000000000000006800d000000000000070000003000000000000000000000";
	test_in[1] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[2] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[3] = "0x000000000000012400000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[4] = "0x000000000024000000000000000040000000000000000000000000000000000000000000000000000000000000000000";
	test_in[5] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000";
	test_in[6] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[7] = "0x000000000000000000000000000000000000000000000000000025000000000000000000000000000000000000000000";
	test_in[8] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[9] = "0x000000000000004800000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[10] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000980000000000";
	test_in[11] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[12] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[13] = "0x000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000";
	test_in[14] = "0x000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000";
	test_in[15] = "0x000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[16] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054000";
	test_in[17] = "0x0000000000000000000000000000ac00d000000000000180000000000000000000000000000000000000000000000000";
	test_in[18] = "0x000000000000000000000000000000000002c03700000000000000000000000000000000000000000000000000000000";
	test_in[19] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[20] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[21] = "0x0000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[22] = "0x00000000000000880000000000000000b000000000000000000000000000000000000000000000000000000000000000";
	test_in[23] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000580000000000";
	test_in[24] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[25] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[26] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[27] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[28] = "0x000000000000000000000000000000000000002d00000000000000003c00000000000000000000000000000000000000";
	test_in[29] = "0x000000000000006c00000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[30] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[31] = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000000";
	test_in[32] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	test_in[33] = "0x000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000";
	test_in[34] = "0x00000000000000000000000000000000900000000000000006800d000000000000070000003000000000000000000000";
	test_in[35] = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

	  algo_top(test_in, test_out);

	  for(int k=0; k<N_INPUT_LINKS; k++){
	  cout << hex << test_out[k] << endl;
	  }

	return 0;
}
